import os
import sys
from pathlib import Path

def get_app_directory():
    """
    ‡∏î‡∏∂‡∏á directory ‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏û‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á development ‡πÅ‡∏•‡∏∞ executable
    """
    
    if getattr(sys, 'frozen', False):
        # ‡∏£‡∏±‡∏ô‡∏à‡∏≤‡∏Å executable (PyInstaller)
        if hasattr(sys, '_MEIPASS'):
            # PyInstaller temp directory (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà bundle ‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢)
            bundle_dir = Path(sys._MEIPASS)
        else:
            # Directory ‡∏Ç‡∏≠‡∏á executable
            bundle_dir = Path(sys.executable).parent
        
        # ‡πÉ‡∏ä‡πâ directory ‡∏ó‡∏µ‡πà executable ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å
        app_dir = Path(sys.executable).parent
        
    else:
        # ‡∏£‡∏±‡∏ô‡∏à‡∏≤‡∏Å source code
        app_dir = Path(__file__).parent
    
    return app_dir

def get_files_directory():
    """‡∏î‡∏∂‡∏á path ‡∏Ç‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå files"""
    return get_app_directory() / "files"

def get_accounts_directory():
    """‡∏î‡∏∂‡∏á path ‡∏Ç‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå accounts"""
    return get_app_directory() / "accounts"

def get_completed_directory():
    """‡∏î‡∏∂‡∏á path ‡∏Ç‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå completed"""
    return get_app_directory() / "completed"

def get_failed_directory():
    """‡∏î‡∏∂‡∏á path ‡∏Ç‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå failed"""
    return get_app_directory() / "failed"

def ensure_directories_exist():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    directories = [
        get_files_directory(),
        get_files_directory() / "disbursement",
        get_files_directory() / "sign-contract",
        get_accounts_directory(),
        get_completed_directory(),
        get_completed_directory() / "disbursement", 
        get_completed_directory() / "sign-contract",
        get_failed_directory(),
        get_failed_directory() / "disbursement",
        get_failed_directory() / "sign-contract"
    ]
    
    for directory in directories:
        directory.mkdir(parents=True, exist_ok=True)
    
    return True

def get_log_file_path(filename):
    """‡∏î‡∏∂‡∏á path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå log"""
    return get_app_directory() / filename

# Test function
if __name__ == "__main__":
    print("üîß Testing path detection...")
    print(f"App Directory: {get_app_directory()}")
    print(f"Files Directory: {get_files_directory()}")
    print(f"Accounts Directory: {get_accounts_directory()}")
    print("‚úÖ Path detection working!")